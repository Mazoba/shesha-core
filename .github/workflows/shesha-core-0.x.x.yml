name: shesha-core-0.x.x

on:
  push:
    branches: [ main ]

env:
  ARTIFACT_NAME: shesha-core
  ARTIFACT_PATH: '.' # Set this to the path to your web app project, defaults to the repository root:
  DOTNET_VERSION: '3.x'

jobs:

  # build the project
  build:
    runs-on: ubuntu-latest
    steps:
      # checkout latest code
      - name: Get Sources
        uses: actions/checkout@v1
      # setup .net core
      - name: Use .NET Core SDK ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      # dotnet restore
      - name: Dotnet Restore
        run: dotnet restore --configfile .nuget/NuGet.Config --verbosity detailed

      ### build Shesha (Solution)
      - name: Dotnet Build
        run: dotnet build --configuration Release

      # tag branch
      - name: Tag Branch
        id: tag_branch
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""
      
      ### pack Shesha.Application (Project)
      - name: Dotnet Pack Shesha.Application
        run: dotnet pack src/Shesha.Application/Shesha.Application.csproj -o ../Shesha.Application -p:PackageVersion=${{ steps.tag_branch.outputs.new_tag }} --include-symbols --include-source
      
      ### Shesha.AzureAD
      ### Shesha.Core
      ### Shesha.Elmah
      ### Shesha.Firebase
      ### Shesha.Framework
      ### Shesha.Import
      ### Shesha.Ldap
      ### Shesha.MongoRepository
      ### Shesha.NHibernate
      ### Shesha.RestSharp
      ### Shesha.Scheduler
      ### Shesha.Sms.BulkSms
      ### Shesha.Sms.Clickatell
      ### Shesha.Sms.SmsPortal
      ### Shesha.Sms.Xml2Sms
      ### Shesha.Web.Controls
      ### Shesha.Web.Core
      ### Shesha.Web.FormsDesigner
      ### Shesha.Web.Host

      # # dotnet publish
      # - name: Dotnet Publish
      #   run: dotnet publish -c Release -o ../${{ env.ARTIFACT_NAME }} -r linux-x64
      # # archive artifact
      # - name: "Publish Artifact"
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: ${{ env.ARTIFACT_NAME }}
      #     path: ${{ env.ARTIFACT_PATH }}/${{ env.ARTIFACT_NAME }}

  # package:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:

  # create a version and tag the branch
  # version:
  #   runs-on: ubuntu-latest
  #   needs: [build, package]
  #   steps:
  #   - name: Bump Version and Push Tag
  #     id: tag_version
  #     uses: mathieudutour/github-tag-action@v5.6
  #     with:
  #       github_token: ${{ secrets.GITHUB_TOKEN }}
  #       tag_prefix: ""

    
  # publish:
  #   runs-on: ubuntu-latest
  #   needs: [build, package, version]
  #   steps:

